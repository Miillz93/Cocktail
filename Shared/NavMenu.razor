@using Pages.Cocktails;

<MudAppBar Color="Color.Success" Elevation="1">
        <MudText Typo="Typo.h5" Class="ml-3">
            <MudLink Href="/" Underline="Underline.None" Color="Color.Inherit" Typo="Typo.h5">CocktailAPP</MudLink>            
        </MudText>
        <MudSpacer />
        @* <MudTextField 
            Placeholder="Search"
            @bind-Value="InputDrinkItem"
            @bind-Value:event="oninput"
            OnInternalInputChanged="OnInputKeyUpChanged"
            DisableUnderLine
            Variant="Variant.Filled"
            Margin="Margin.Dense"
            Adornment ="Adornment.Start"
            AdornmentIcon="@Icons.Material.Filled.Search"
            AdornmentColor="Color.Inherit">
        </MudTextField> *@
       @* <input type="text" @bind-value="InputDrinkItem" @bind-value:event="oninput" @onchange="OnInputKeyUpChanged" placeholder="Search..."/> *@

        @* @bind-Value:event="OnInputKeyUpChanged" *@
        <MudSpacer />
        <MudLink Href="https://github.com/miillz93/Cocktail"
            Underline="Underline.None">
            <MudIconButton
                Icon="@Icons.Custom.Brands.GitHub"
                Color="Color.Dark"
                Title="Github"/>
        </MudLink>
        
</MudAppBar>
@* <p class="pa-7">@InputDrinkItem</p> *@

@code{

    @* [Parameter]
    public string? InputDrinkItem { get; set; } 
    
    [Parameter] 
    public EventCallback<string> InputDrinkItemChanged { get; set; }

    private Task OnInputKeyUpChanged(ChangeEventArgs e){
        InputDrinkItem = e.Value?.ToString();
        return InputDrinkItemChanged.InvokeAsync(InputDrinkItem);

    } *@

    

}